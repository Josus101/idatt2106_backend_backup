package org.ntnu.idatt2106.backend.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.http.ResponseEntity;

import org.ntnu.idatt2106.backend.service.ReCaptchaService;

@RestController
@RequestMapping("/api/reCaptcha")
public class ReCaptchaController {

  @Autowired
  private ReCaptchaService reCaptchaService;


  @PostMapping("/verify")
  @Operation(
          summary = "Verify reCAPTCHA token",
          description = "Validates the reCAPTCHA token received from the frontend using Google's verification service."
  )
  @ApiResponses(value = {
          @ApiResponse(
                  responseCode = "200",
                  description = "reCAPTCHA token validated successfully",
                  content = @Content(schema = @Schema(example = "Success!"))
          ),
          @ApiResponse(
                  responseCode = "400",
                  description = "Captcha verification failed or incorrect data format",
                  content = @Content(schema = @Schema(example = "Captcha verification failed."))
          )
  })
  public ResponseEntity<String> handleForm(
          @Parameter(
                  description = "The token string generated by reCAPTCHA client-side integration",
                  required = true,
                  example = "03AGdBq26aG7...")
          @RequestParam("token") String token) {

    if (!reCaptchaService.verifyReCaptchaToken(token)) {
      return ResponseEntity.badRequest().body("Captcha verification failed.");
    }

    return ResponseEntity.ok("Success!");
  }
}
